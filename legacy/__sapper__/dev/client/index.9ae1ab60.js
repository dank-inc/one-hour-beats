import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, v as validate_store, a as component_subscribe, b as validate_slots, x as jamStore, f as space, e as element, t as text, G as query_selector_all, l as detach_dev, m as claim_space, g as claim_element, h as children, k as claim_text, o as add_location, n as attr_dev, p as insert_dev, q as append_dev, u as noop } from './client.61dd763a.js';
import { J as JamLink } from './JamLink.3a70df55.js';
import './time.8f7c612d.js';

/* src/routes/jams/index.svelte generated by Svelte v3.20.1 */
const file = "src/routes/jams/index.svelte";

function create_fragment(ctx) {
	let t0;
	let header;
	let h1;
	let t1;
	let t2;
	let p;
	let t3;
	let t4;
	let div;
	let t5;

	const block = {
		c: function create() {
			t0 = space();
			header = element("header");
			h1 = element("h1");
			t1 = text("All The Jammin");
			t2 = space();
			p = element("p");
			t3 = text("soem little description blah");
			t4 = space();
			div = element("div");
			t5 = text("you should be redirected. please tell Elijah he did this wrong!");
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-wugbhk\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			header = claim_element(nodes, "HEADER", {});
			var header_nodes = children(header);
			h1 = claim_element(header_nodes, "H1", {});
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, "All The Jammin");
			h1_nodes.forEach(detach_dev);
			t2 = claim_space(header_nodes);
			p = claim_element(header_nodes, "P", {});
			var p_nodes = children(p);
			t3 = claim_text(p_nodes, "soem little description blah");
			p_nodes.forEach(detach_dev);
			header_nodes.forEach(detach_dev);
			t4 = claim_space(nodes);
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			t5 = claim_text(div_nodes, "you should be redirected. please tell Elijah he did this wrong!");
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Jam Listings";
			add_location(h1, file, 21, 2, 527);
			add_location(p, file, 22, 2, 554);
			add_location(header, file, 20, 0, 515);
			attr_dev(div, "class", "page-content");
			add_location(div, file, 25, 0, 604);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, header, anchor);
			append_dev(header, h1);
			append_dev(h1, t1);
			append_dev(header, t2);
			append_dev(header, p);
			append_dev(p, t3);
			insert_dev(target, t4, anchor);
			insert_dev(target, div, anchor);
			append_dev(div, t5);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(header);
			if (detaching) detach_dev(t4);
			if (detaching) detach_dev(div);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

async function preload() {
	this.redirect(302, "/");
}

function instance($$self, $$props, $$invalidate) {
	let $jamStore;
	validate_store(jamStore, "jamStore");
	component_subscribe($$self, jamStore, $$value => $$invalidate(1, $jamStore = $$value));
	let currentTime = parseInt(new Date().getTime() / 1000);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Jams> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Jams", $$slots, []);

	$$self.$capture_state = () => ({
		preload,
		JamLink,
		jamStore,
		currentTime,
		jamIndex,
		$jamStore
	});

	$$self.$inject_state = $$props => {
		if ("currentTime" in $$props) currentTime = $$props.currentTime;
		if ("jamIndex" in $$props) jamIndex = $$props.jamIndex;
	};

	let jamIndex;

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*$jamStore*/ 2) {
			 jamIndex = $jamStore;
		}
	};

	return [];
}

class Jams extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Jams",
			options,
			id: create_fragment.name
		});
	}
}

export default Jams;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguOWFlMWFiNjAuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvamFtcy9pbmRleC5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdCBjb250ZXh0PVwibW9kdWxlXCI+XHJcbiAgZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHByZWxvYWQoKSB7XHJcbiAgICB0aGlzLnJlZGlyZWN0KDMwMiwgXCIvXCIpO1xyXG4gIH1cclxuPC9zY3JpcHQ+XHJcblxyXG48c2NyaXB0PlxyXG4gIGltcG9ydCBKYW1MaW5rIGZyb20gXCIuLi8uLi9jb21wb25lbnRzL0phbUxpbmsuc3ZlbHRlXCI7XHJcbiAgaW1wb3J0IHsgamFtU3RvcmUgfSBmcm9tIFwiLi4vLi4vc3RvcmVcIjtcclxuICBsZXQgY3VycmVudFRpbWUgPSBwYXJzZUludChuZXcgRGF0ZSgpLmdldFRpbWUoKSAvIDEwMDApO1xyXG4gICQ6IGphbUluZGV4ID0gJGphbVN0b3JlO1xyXG5cclxuICAvLyB0b2RvIGlmIGphbS5jcmVhdGVkQXQgaXMgbGVzcyB0aGF0IDMwIHNlY29uZHMgYWdvLCBtYWtlIGl0IGZsYXNoIG9yIGFkZCBhIGhpZ2hsaWdodCBvbiBpdFxyXG4gIC8vIGFsc28gc29ydCBieSBjcmVhdGVkQXRcclxuPC9zY3JpcHQ+XHJcblxyXG48c3ZlbHRlOmhlYWQ+XHJcbiAgPHRpdGxlPkphbSBMaXN0aW5nczwvdGl0bGU+XHJcbjwvc3ZlbHRlOmhlYWQ+XHJcblxyXG48aGVhZGVyPlxyXG4gIDxoMT5BbGwgVGhlIEphbW1pbjwvaDE+XHJcbiAgPHA+c29lbSBsaXR0bGUgZGVzY3JpcHRpb24gYmxhaDwvcD5cclxuPC9oZWFkZXI+XHJcblxyXG48ZGl2IGNsYXNzPVwicGFnZS1jb250ZW50XCI+XHJcbiAgeW91IHNob3VsZCBiZSByZWRpcmVjdGVkLiBwbGVhc2UgdGVsbCBFbGlqYWggaGUgZGlkIHRoaXMgd3JvbmchXHJcbjwvZGl2PlxyXG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7ZUFDd0IsT0FBTztDQUMzQixJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsRUFBRSxHQUFHOzs7Ozs7O0tBQ3BCLFdBQVcsR0FBRyxRQUFRLEtBQUssSUFBSSxHQUFHLE9BQU8sS0FBSyxJQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQUNuRCxRQUFRLEdBQUcsU0FBUzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyJ9

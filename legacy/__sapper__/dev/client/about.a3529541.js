import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, b as validate_slots, f as space, e as element, t as text, G as query_selector_all, l as detach_dev, m as claim_space, g as claim_element, h as children, k as claim_text, o as add_location, n as attr_dev, p as insert_dev, q as append_dev, u as noop } from './client.61dd763a.js';

/* src/routes/about.svelte generated by Svelte v3.20.1 */

const file = "src/routes/about.svelte";

function create_fragment(ctx) {
	let t0;
	let header;
	let h1;
	let t1;
	let t2;
	let p0;
	let t3;
	let t4;
	let div;
	let p1;
	let t5;
	let t6;
	let p2;
	let t7;
	let t8;
	let p3;
	let t9;
	let t10;
	let p4;
	let t11;
	let t12;
	let p5;
	let t13;

	const block = {
		c: function create() {
			t0 = space();
			header = element("header");
			h1 = element("h1");
			t1 = text("About One Hour Beats");
			t2 = space();
			p0 = element("p");
			t3 = text("Why having so much fun?");
			t4 = space();
			div = element("div");
			p1 = element("p");
			t5 = text("Once upon a time, in the early demoscene years, in the days of the trackers\r\n    there existed a compo.");
			t6 = space();
			p2 = element("p");
			t7 = text("This compo was called OHC. It stood for \"one hour competition\"");
			t8 = space();
			p3 = element("p");
			t9 = text("Sadly the modern DAW has taken much from the demoscene days, Including our\r\n    beloved One Hour Compo.");
			t10 = space();
			p4 = element("p");
			t11 = text("But that all changes here, today!");
			t12 = space();
			p5 = element("p");
			t13 = text("TODO: add an inspiring speech about how working within limitations can spark\r\n    creativity and shit.");
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-ts0eqk\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			header = claim_element(nodes, "HEADER", {});
			var header_nodes = children(header);
			h1 = claim_element(header_nodes, "H1", {});
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, "About One Hour Beats");
			h1_nodes.forEach(detach_dev);
			t2 = claim_space(header_nodes);
			p0 = claim_element(header_nodes, "P", {});
			var p0_nodes = children(p0);
			t3 = claim_text(p0_nodes, "Why having so much fun?");
			p0_nodes.forEach(detach_dev);
			header_nodes.forEach(detach_dev);
			t4 = claim_space(nodes);
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			p1 = claim_element(div_nodes, "P", {});
			var p1_nodes = children(p1);
			t5 = claim_text(p1_nodes, "Once upon a time, in the early demoscene years, in the days of the trackers\r\n    there existed a compo.");
			p1_nodes.forEach(detach_dev);
			t6 = claim_space(div_nodes);
			p2 = claim_element(div_nodes, "P", {});
			var p2_nodes = children(p2);
			t7 = claim_text(p2_nodes, "This compo was called OHC. It stood for \"one hour competition\"");
			p2_nodes.forEach(detach_dev);
			t8 = claim_space(div_nodes);
			p3 = claim_element(div_nodes, "P", {});
			var p3_nodes = children(p3);
			t9 = claim_text(p3_nodes, "Sadly the modern DAW has taken much from the demoscene days, Including our\r\n    beloved One Hour Compo.");
			p3_nodes.forEach(detach_dev);
			t10 = claim_space(div_nodes);
			p4 = claim_element(div_nodes, "P", {});
			var p4_nodes = children(p4);
			t11 = claim_text(p4_nodes, "But that all changes here, today!");
			p4_nodes.forEach(detach_dev);
			t12 = claim_space(div_nodes);
			p5 = claim_element(div_nodes, "P", {});
			var p5_nodes = children(p5);
			t13 = claim_text(p5_nodes, "TODO: add an inspiring speech about how working within limitations can spark\r\n    creativity and shit.");
			p5_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "One Hour Beats - About";
			add_location(h1, file, 4, 2, 84);
			add_location(p0, file, 5, 2, 117);
			add_location(header, file, 3, 0, 72);
			add_location(p1, file, 9, 2, 192);
			add_location(p2, file, 13, 2, 316);
			add_location(p3, file, 14, 2, 389);
			add_location(p4, file, 18, 2, 513);
			add_location(p5, file, 19, 2, 557);
			attr_dev(div, "class", "page-content");
			add_location(div, file, 8, 0, 162);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, header, anchor);
			append_dev(header, h1);
			append_dev(h1, t1);
			append_dev(header, t2);
			append_dev(header, p0);
			append_dev(p0, t3);
			insert_dev(target, t4, anchor);
			insert_dev(target, div, anchor);
			append_dev(div, p1);
			append_dev(p1, t5);
			append_dev(div, t6);
			append_dev(div, p2);
			append_dev(p2, t7);
			append_dev(div, t8);
			append_dev(div, p3);
			append_dev(p3, t9);
			append_dev(div, t10);
			append_dev(div, p4);
			append_dev(p4, t11);
			append_dev(div, t12);
			append_dev(div, p5);
			append_dev(p5, t13);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(header);
			if (detaching) detach_dev(t4);
			if (detaching) detach_dev(div);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props) {
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<About> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("About", $$slots, []);
	return [];
}

class About extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "About",
			options,
			id: create_fragment.name
		});
	}
}

export default About;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJvdXQuYTM1Mjk1NDEuanMiLCJzb3VyY2VzIjpbXSwic291cmNlc0NvbnRlbnQiOltdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
